[{"C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\index.tsx":"1","C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\reportWebVitals.ts":"2","C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\app\\layout\\App.tsx":"3","C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\features\\nav\\NavBar.tsx":"4","C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\features\\activities\\form\\ActivityForm.tsx":"8","C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\api\\agent.ts":"9","C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\app\\layout\\LoadingComponent.tsx":"10","C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\app\\stores\\activityStore.ts":"11"},{"size":584,"mtime":1608650740190,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":2374,"mtime":1609961057274,"results":"15","hashOfConfig":"13"},{"size":878,"mtime":1609960837864,"results":"16","hashOfConfig":"13"},{"size":1854,"mtime":1609961044523,"results":"17","hashOfConfig":"13"},{"size":1978,"mtime":1609961484971,"results":"18","hashOfConfig":"13"},{"size":1519,"mtime":1609960095374,"results":"19","hashOfConfig":"13"},{"size":3003,"mtime":1609961013163,"results":"20","hashOfConfig":"13"},{"size":1186,"mtime":1608650740136,"results":"21","hashOfConfig":"13"},{"size":394,"mtime":1608040267893,"results":"22","hashOfConfig":"13"},{"size":1567,"mtime":1609961429763,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"17c8ilc",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\index.tsx",[],["50","51"],"C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\reportWebVitals.ts",[],"C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\app\\layout\\App.tsx",["52","53","54","55"],"import React, {\r\n  useEffect,\r\n  useState,\r\n  Fragment,\r\n  SyntheticEvent,\r\n  useContext,\r\n} from 'react';\r\n\r\nimport NavBar from '../../features/nav/NavBar';\r\n\r\nimport { IActivity } from '../models/activity';\r\nimport { Container } from 'semantic-ui-react';\r\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\r\nimport agent from '../../api/agent';\r\nimport LoadingComponent from './LoadingComponent';\r\nimport ActivityStore from '../stores/activityStore';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst App = () => {\r\n  const activityStore = useContext(ActivityStore);\r\n  const [activities, setActivities] = useState<IActivity[]>([]);\r\n  const [selectedActivity, setSelectedActivity] = useState<IActivity | null>(\r\n    null\r\n  );\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [target, setTarget] = useState('');\r\n\r\n  useEffect(() => {\r\n    activityStore.loadActivities();\r\n  }, [activityStore]);\r\n\r\n  const handleEditActivity = (activity: IActivity) => {\r\n    setSubmitting(true);\r\n    agent.Activities.update(activity)\r\n      .then(() => {\r\n        setActivities([\r\n          ...activities.filter((a) => a.id !== activity.id),\r\n          activity,\r\n        ]);\r\n        setSelectedActivity(activity);\r\n        setEditMode(false);\r\n      })\r\n      .then(() => setSubmitting(false));\r\n  };\r\n\r\n  const handleDeleteActivity = (\r\n    event: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) => {\r\n    setTarget(event.currentTarget.name);\r\n    setSubmitting(true);\r\n    agent.Activities.delete(id)\r\n      .then(() => {\r\n        setActivities([...activities.filter((a) => a.id !== id)]);\r\n      })\r\n      .then(() => setSubmitting(false));\r\n  };\r\n\r\n  if (activityStore.loadingInitial)\r\n    return <LoadingComponent content=\"Loading activities...\" />;\r\n\r\n  return (\r\n    <Fragment>\r\n      <NavBar />\r\n      <Container style={{ marginTop: '7em' }}>\r\n        <ActivityDashboard\r\n          setEditMode={setEditMode}\r\n          setSelectedActivity={setSelectedActivity}\r\n          editActivity={handleEditActivity}\r\n          deleteActivity={handleDeleteActivity}\r\n          submitting={submitting}\r\n          target={target}\r\n        />\r\n      </Container>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(App);\r\n","C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\features\\nav\\NavBar.tsx",[],"C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",[],"C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\features\\activities\\dashboard\\ActivityList.tsx",["56"],"import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent, useContext } from 'react';\r\nimport { Button, Item, Label, Segment } from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/activity';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\n\r\nexport interface IProps {\r\n  deleteActivity: (\r\n    event: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) => void;\r\n  submitting: boolean;\r\n  target: string;\r\n}\r\n\r\nconst ActiviyList: React.FC<IProps> = ({\r\n  deleteActivity,\r\n  submitting,\r\n  target,\r\n}) => {\r\n  const activityStore = useContext(ActivityStore);\r\n  const { activities, selectActivity } = activityStore;\r\n  return (\r\n    <Segment clearing>\r\n      <Item.Group divided>\r\n        {activities.map((activity) => (\r\n          <Item key={activity.id}>\r\n            <Item.Content>\r\n              <Item.Header as=\"a\">{activity.title}</Item.Header>\r\n              <Item.Meta>{activity.date}</Item.Meta>\r\n              <Item.Description>\r\n                <div>{activity.description}</div>\r\n                <div>\r\n                  {activity.city}, {activity.venue}\r\n                </div>\r\n              </Item.Description>\r\n              <Item.Extra>\r\n                <Button\r\n                  onClick={() => selectActivity(activity.id)}\r\n                  floated=\"right\"\r\n                  content=\"View\"\r\n                  color=\"blue\"\r\n                />\r\n                <Button\r\n                  name={activity.id}\r\n                  loading={target === activity.id && submitting}\r\n                  onClick={(e) => deleteActivity(e, activity.id)}\r\n                  floated=\"right\"\r\n                  content=\"Delete\"\r\n                  color=\"red\"\r\n                />\r\n                <Label basic content={activity.category} />\r\n              </Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n        ))}\r\n      </Item.Group>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ActiviyList);\r\n","C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\features\\activities\\form\\ActivityForm.tsx",[],"C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\api\\agent.ts",["57"],"import axios, { AxiosResponse } from \"axios\";\r\nimport { IActivity } from \"../app/models/activity\";\r\n\r\naxios.defaults.baseURL = \"http://localhost:5000/api\";\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) => \r\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n    del: (url: string) => axios.delete(url).then(sleep(1000)).then(responseBody),\r\n}\r\n\r\nconst Activities = {\r\n    list: (): Promise<IActivity[]> => requests.get(\"/activities\"),\r\n    details: (id: string) => requests.get(`/activities/${id}`),\r\n    create: (activity: IActivity) => requests.post(\"/activities\", activity),\r\n    update: (activity: IActivity) => requests.put(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del(`/activities/${id}`),\r\n}\r\n\r\nexport default {\r\n    Activities\r\n}","C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\app\\layout\\LoadingComponent.tsx",[],"C:\\DATA\\Development\\Web\\EventHub\\ui\\src\\app\\stores\\activityStore.ts",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":22,"column":10,"nodeType":"64","messageId":"65","endLine":22,"endColumn":26},{"ruleId":"62","severity":1,"message":"66","line":25,"column":10,"nodeType":"64","messageId":"65","endLine":25,"endColumn":18},{"ruleId":"62","severity":1,"message":"67","line":26,"column":10,"nodeType":"64","messageId":"65","endLine":26,"endColumn":17},{"ruleId":"62","severity":1,"message":"68","line":26,"column":19,"nodeType":"64","messageId":"65","endLine":26,"endColumn":29},{"ruleId":"62","severity":1,"message":"69","line":4,"column":10,"nodeType":"64","messageId":"65","endLine":4,"endColumn":19},{"ruleId":"70","severity":1,"message":"71","line":26,"column":1,"nodeType":"72","endLine":28,"endColumn":2},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"@typescript-eslint/no-unused-vars","'selectedActivity' is assigned a value but never used.","Identifier","unusedVar","'editMode' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'IActivity' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]